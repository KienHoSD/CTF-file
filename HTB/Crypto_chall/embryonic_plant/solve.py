from Crypto.Util.number import getPrime, long_to_bytes, inverse
from Crypto.Cipher import AES
from Crypto.Util.Padding import pad
from hashlib import sha256
p = 894446245510925900757859218978228942794252337676198559768107950260678987733529823340885254193604339932972486658396833844024474787422962270607186965094559134722178099791320470738178233762259364213340978694468588119134919693759610053
q = 906733274052529276109592299297997707435365596776010684213565378608820566280655233518772810060517362344918531956429564180076441739921005749502457162256034890280334645973185184863364876570734016299914442372810566038540388164095793981
z = 1175319410653790713318161315597014087606020658360287700168819990622753451616704400432418300009958541178974736666240265702120596805253727238317148553986872464800708521002965176311173263861008683624274661261421906954267093414402220131
phi = (p-1)*(q-1)*(z-1)
d = inverse(0x10001,phi)
key = sha256(long_to_bytes(d)).digest()
cipher = AES.new(key, AES.MODE_ECB)
enc = 'd3587442177b157fa0cecb6dd880872d86e15a50e3f05ecfeea8b90f5cfca22835a59d9c4f23e87a68317d4ccabe1bf3aa2e6cdf0a9ef1ada0a2e83d8da0bff2b739cf0e2b2b779958d9b1154a6f3698'
enc = bytes.fromhex(enc)
flag = cipher.decrypt(enc)
print(flag)